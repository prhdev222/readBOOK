import { Book, Category, BookLink } from '@/types';

// ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á (‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ PostgreSQL, MongoDB ‡∏´‡∏£‡∏∑‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô)
class Database {
  private books: Book[] = [];
  private categories: Category[] = [];
  private bookLinks: BookLink[] = [];

  constructor() {
    this.initializeData();
  }

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  private initializeData() {
    // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    this.categories = [
      {
        id: '1',
        name: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ',
        description: '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°',
        color: '#3B82F6',
        icon: 'üíª',
        bookCount: 0,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      {
        id: '2',
        name: 'AI & Data Science',
        description: '‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        color: '#10B981',
        icon: 'ü§ñ',
        bookCount: 0,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      {
        id: '3',
        name: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
        description: '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô',
        color: '#F59E0B',
        icon: 'üí∞',
        bookCount: 0,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      }
    ];

    // ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    this.books = [
      {
        id: '1',
        title: '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Python',
        author: '‡∏î‡∏£.‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
        description: '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Python ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô',
        coverImage: '/api/placeholder/300/400',
        category: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ',
        tags: ['Python', 'Programming', 'Beginner'],
        publishedDate: '2024-01-15',
        language: '‡πÑ‡∏ó‡∏¢',
        pages: 250,
        fileSize: '15.2 MB',
        links: [],
        createdAt: '2024-01-15T10:00:00Z',
        updatedAt: '2024-01-15T10:00:00Z'
      },
      {
        id: '2',
        title: 'Machine Learning Fundamentals',
        author: 'Dr. Jane Smith',
        description: 'A comprehensive guide to machine learning concepts and applications',
        coverImage: '/api/placeholder/300/400',
        category: 'AI & Data Science',
        tags: ['Machine Learning', 'AI', 'Data Science'],
        publishedDate: '2024-02-01',
        language: 'English',
        pages: 400,
        fileSize: '25.8 MB',
        links: [],
        createdAt: '2024-02-01T10:00:00Z',
        updatedAt: '2024-02-01T10:00:00Z'
      }
    ];

    // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    this.bookLinks = [
      // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ Python
      {
        id: 'link1',
        type: 'google_drive',
        url: 'https://drive.google.com/file/d/1ABC123DEF456GHI789JKL/view',
        title: 'Google Drive',
        description: '‡πÑ‡∏ü‡∏•‡πå PDF ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á',
        isPrimary: true,
        isActive: true
      },
      {
        id: 'link2',
        type: 'dropbox',
        url: 'https://dropbox.com/s/xyz789abc123def456/file.pdf',
        title: 'Dropbox',
        description: '‡∏™‡∏≥‡∏£‡∏≠‡∏á - ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô',
        isPrimary: false,
        isActive: true
      },
      // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ Machine Learning
      {
        id: 'link3',
        type: 'onedrive',
        url: 'https://1drv.ms/b/s!ABC123DEF456GHI789JKL',
        title: 'OneDrive',
        description: '‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å',
        isPrimary: true,
        isActive: true
      },
      {
        id: 'link4',
        type: 'mega',
        url: 'https://mega.nz/file/xyz789abc123def456',
        title: 'MEGA',
        description: '‡∏™‡∏≥‡∏£‡∏≠‡∏á - ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™',
        isPrimary: false,
        isActive: true
      }
    ];

    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
    this.books[0].links = [this.bookLinks[0], this.bookLinks[1]];
    this.books[1].links = [this.bookLinks[2], this.bookLinks[3]];
  }

  // ========== BOOK METHODS ==========
  
  // ‡∏î‡∏∂‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  getAllBooks(): Book[] {
    return this.books;
  }

  // ‡∏î‡∏∂‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ï‡∏≤‡∏° ID
  getBookById(id: string): Book | null {
    return this.books.find(book => book.id === id) || null;
  }

  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
  searchBooks(query: string, category?: string): Book[] {
    let filteredBooks = this.books;

    if (query) {
      const searchTerm = query.toLowerCase();
      filteredBooks = filteredBooks.filter(book => 
        book.title.toLowerCase().includes(searchTerm) ||
        book.author.toLowerCase().includes(searchTerm) ||
        book.tags.some(tag => tag.toLowerCase().includes(searchTerm)) ||
        book.description?.toLowerCase().includes(searchTerm)
      );
    }

    if (category && category !== 'all') {
      filteredBooks = filteredBooks.filter(book => book.category === category);
    }

    return filteredBooks;
  }

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà
  addBook(book: Omit<Book, 'id' | 'createdAt' | 'updatedAt'>): Book {
    const newBook: Book = {
      ...book,
      id: Date.now().toString(),
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    
    this.books.push(newBook);
    return newBook;
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
  updateBook(id: string, updates: Partial<Book>): Book | null {
    const index = this.books.findIndex(book => book.id === id);
    if (index === -1) return null;

    this.books[index] = {
      ...this.books[index],
      ...updates,
      updatedAt: new Date().toISOString()
    };

    return this.books[index];
  }

  // ‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
  deleteBook(id: string): boolean {
    const index = this.books.findIndex(book => book.id === id);
    if (index === -1) return false;

    // ‡∏•‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    this.bookLinks = this.bookLinks.filter(link => 
      !this.books[index].links.some(bookLink => bookLink.id === link.id)
    );

    this.books.splice(index, 1);
    return true;
  }

  // ========== LINK METHODS ==========

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏´‡πâ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
  addLinkToBook(bookId: string, link: Omit<BookLink, 'id'>): BookLink | null {
    const book = this.getBookById(bookId);
    if (!book) return null;

    const newLink: BookLink = {
      ...link,
      id: `link_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
    };

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    this.bookLinks.push(newLink);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏´‡πâ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
    book.links.push(newLink);
    book.updatedAt = new Date().toISOString();

    return newLink;
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏¥‡∏á‡∏Å‡πå
  updateLink(linkId: string, updates: Partial<BookLink>): BookLink | null {
    const linkIndex = this.bookLinks.findIndex(link => link.id === linkId);
    if (linkIndex === -1) return null;

    this.bookLinks[linkIndex] = {
      ...this.bookLinks[linkIndex],
      ...updates
    };

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    this.books.forEach(book => {
      const bookLinkIndex = book.links.findIndex(link => link.id === linkId);
      if (bookLinkIndex !== -1) {
        book.links[bookLinkIndex] = this.bookLinks[linkIndex];
        book.updatedAt = new Date().toISOString();
      }
    });

    return this.bookLinks[linkIndex];
  }

  // ‡∏•‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå
  deleteLink(linkId: string): boolean {
    const linkIndex = this.bookLinks.findIndex(link => link.id === linkId);
    if (linkIndex === -1) return false;

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    this.bookLinks.splice(linkIndex, 1);

    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    this.books.forEach(book => {
      const bookLinkIndex = book.links.findIndex(link => link.id === linkId);
      if (bookLinkIndex !== -1) {
        book.links.splice(bookLinkIndex, 1);
        book.updatedAt = new Date().toISOString();
      }
    });

    return true;
  }

  // ‡∏î‡∏∂‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
  getBookLinks(bookId: string): BookLink[] {
    const book = this.getBookById(bookId);
    return book ? book.links : [];
  }

  // ========== CATEGORY METHODS ==========

  // ‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  getAllCategories(): Category[] {
    return this.categories;
  }

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
  addCategory(category: Omit<Category, 'id' | 'bookCount' | 'createdAt' | 'updatedAt'>): Category {
    const newCategory: Category = {
      ...category,
      id: Date.now().toString(),
      bookCount: 0,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    
    this.categories.push(newCategory);
    return newCategory;
  }

  // ========== STATISTICS ==========

  // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏∞‡∏ö‡∏ö
  getStatistics() {
    return {
      totalBooks: this.books.length,
      totalLinks: this.bookLinks.length,
      totalCategories: this.categories.length,
      linkTypes: this.getLinkTypeStatistics(),
      recentBooks: this.books
        .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())
        .slice(0, 5)
    };
  }

  // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏•‡∏¥‡∏á‡∏Å‡πå
  private getLinkTypeStatistics() {
    const stats: Record<string, number> = {};
    this.bookLinks.forEach(link => {
      stats[link.type] = (stats[link.type] || 0) + 1;
    });
    return stats;
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Ç‡∏≠‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
export const db = new Database();
