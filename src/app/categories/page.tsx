'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import { supabase } from '@/lib/supabase';

interface Book {
  id: string;
  title: string;
  author: string;
  description?: string;
  category: string;
  language: string;
  created_at: string;
}

interface Category {
  id: string;
  name: string;
  color: string;
  icon: string;
  description?: string;
  book_count: number;
  created_at: string;
}

function CategoriesPageContent() {
  const [categories, setCategories] = useState<Category[]>([]);
  const [books, setBooks] = useState<Book[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    try {
      // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
      const { data: categoriesData, error: categoriesError } = await supabase
        .from('categories')
        .select('*')
        .order('created_at', { ascending: false });

      if (categoriesError) throw categoriesError;

      // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ
      const { data: booksData, error: booksError } = await supabase
        .from('books')
        .select('id, title, author, description, category, language, created_at')
        .order('created_at', { ascending: false });

      if (booksError) throw booksError;

      setCategories(categoriesData || []);
      setBooks(booksData || []);
    } catch (error) {
      console.error('Error loading data:', error);
      setError('Failed to load categories');
    } finally {
      setLoading(false);
    }
  };

  // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const booksByCategory = books.reduce((acc, book) => {
    if (!acc[book.category]) {
      acc[book.category] = [];
    }
    acc[book.category].push(book);
    return acc;
  }, {} as Record<string, Book[]>);

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡∏à‡∏≤‡∏Å Supabase
  const getCategoryInfo = (categoryName: string) => {
    const categoryFromDb = categories.find(cat => cat.name === categoryName);

    if (categoryFromDb) {
      return {
        icon: categoryFromDb.icon,
        color: 'from-' + categoryFromDb.color.replace('#', '') + ' to-' + categoryFromDb.color.replace('#', '') + '-600',
        description: categoryFromDb.description || `‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ${categoryName}`,
        // ‡πÉ‡∏´‡πâ type ‡∏Ç‡∏≠‡∏á info ‡∏°‡∏µ backgroundColor ‡πÄ‡∏™‡∏°‡∏≠ (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô undefined)
        backgroundColor: undefined as string | undefined,
      };
    }

    // Fallback colors for categories not in database
    const fallbackColors: Record<string, { icon: string; color: string; description: string; backgroundColor?: string }> = {
      '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ': {
        icon: 'üíª',
        color: 'from-blue-500 to-cyan-600',
        description: '‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ',
        backgroundColor: undefined,
      },
      'AI & Data Science': {
        icon: 'ü§ñ',
        color: 'from-purple-500 to-pink-600',
        description: '‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        backgroundColor: undefined,
      },
      '‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö': {
        icon: 'üé®',
        color: 'from-green-500 to-teal-600',
        description: '‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö UI/UX ‡∏Å‡∏£‡∏≤‡∏ü‡∏¥‡∏Å ‡πÅ‡∏•‡∏∞‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ',
        backgroundColor: undefined,
      },
      '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à': {
        icon: 'üíº',
        color: 'from-orange-500 to-red-600',
        description: '‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à',
        backgroundColor: undefined,
      },
      '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤': {
        icon: 'üìñ',
        color: 'from-indigo-500 to-blue-600',
        description: '‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ',
        backgroundColor: undefined,
      },
      '‡πÑ‡∏•‡∏ü‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå': {
        icon: 'üåü',
        color: 'from-pink-500 to-rose-600',
        description: '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á',
        backgroundColor: undefined,
      }
    };

    return fallbackColors[categoryName] || {
      icon: 'üìö',
      color: 'from-gray-500 to-gray-600',
      description: `‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ${categoryName}`,
      backgroundColor: undefined,
    };
  };

  // ‡πÅ‡∏™‡∏î‡∏á loading state
  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <header className="bg-white shadow-sm">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-6">
              <Link href="/" className="text-2xl font-bold text-gray-900">
                üèõÔ∏è ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏£‡∏∞‡∏™‡∏á‡∏Ü‡πå
              </Link>
              <nav className="flex space-x-8">
                <Link href="/books" className="text-gray-600 hover:text-gray-900">
                  ‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                </Link>
                <Link href="/search" className="text-gray-600 hover:text-gray-900">
                  ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                </Link>
                <Link href="/categories" className="text-blue-600 font-medium">
                  ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
                </Link>
              </nav>
            </div>
          </div>
        </header>
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="text-center py-12">
            <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
            <p className="mt-4 text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
          </div>
        </main>
      </div>
    );
  }

  // ‡πÅ‡∏™‡∏î‡∏á error state
  if (error) {
    return (
      <div className="min-h-screen bg-gray-50">
        <header className="bg-white shadow-sm">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-6">
              <Link href="/" className="text-2xl font-bold text-gray-900">
                üèõÔ∏è ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏£‡∏∞‡∏™‡∏á‡∏Ü‡πå
              </Link>
              <nav className="flex space-x-8">
                <Link href="/books" className="text-gray-600 hover:text-gray-900">
                  ‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                </Link>
                <Link href="/search" className="text-gray-600 hover:text-gray-900">
                  ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                </Link>
                <Link href="/categories" className="text-blue-600 font-medium">
                  ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
                </Link>
              </nav>
            </div>
          </div>
        </header>
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="text-center py-12">
            <div className="text-red-600 mb-4">‚ùå</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>
            <p className="text-gray-600 mb-4">{error}</p>
            <button
              onClick={loadData}
              className="bg-blue-600 text-white px-6 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors"
            >
              ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
            </button>
          </div>
        </main>
      </div>
    );
  }

  // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏£‡∏∑‡∏≠ fallback ‡∏à‡∏≤‡∏Å‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ
  const displayCategories = categories.length > 0
    ? categories.map(cat => ({
        name: cat.name,
        books: booksByCategory[cat.name] || [],
        info: {
          icon: cat.icon,
          color: 'from-blue-500 to-blue-600', // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏ó‡∏ô dynamic color
          backgroundColor: cat.color, // ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏µ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô style
          description: cat.description || `‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ${cat.name}`
        }
      }))
    : Object.entries(booksByCategory).map(([categoryName, categoryBooks]) => ({
        name: categoryName,
        books: categoryBooks,
        info: getCategoryInfo(categoryName)
      }));

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <Link href="/" className="text-2xl font-bold text-gray-900">
              üèõÔ∏è ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏£‡∏∞‡∏™‡∏á‡∏Ü‡πå
            </Link>
            <nav className="flex space-x-8">
              <Link href="/books" className="text-gray-600 hover:text-gray-900">
                ‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </Link>
              <Link href="/search" className="text-gray-600 hover:text-gray-900">
                ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
              </Link>
              <Link href="/categories" className="text-blue-600 font-medium">
                ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
              </Link>
            </nav>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Page Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ</h1>
          <p className="text-xl text-gray-600">
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
          </p>
        </div>

        {/* Categories Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
          {displayCategories.map((category) => (
            <div key={category.name} className="group cursor-pointer">
              <Link href={`/books?category=${encodeURIComponent(category.name)}`}>
                <div className="bg-white rounded-xl shadow-md overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:scale-105">
                  {/* Category Header */}
                  <div 
                    className="p-8 text-white text-center"
                    style={{ 
                      background: category.info.backgroundColor 
                        ? `linear-gradient(135deg, ${category.info.backgroundColor}20, ${category.info.backgroundColor})`
                        : `linear-gradient(135deg, ${category.info.color})`
                    }}
                  >
                    <div className="text-5xl mb-4">{category.info.icon}</div>
                    <h2
                      className="text-3xl font-extrabold mb-2 tracking-wide drop-shadow"
                      style={{ textShadow: '0 2px 4px rgba(0,0,0,0.35)' }}
                    >
                      {category.name}
                    </h2>
                    <p className="text-white/80 text-sm">{category.info.description}</p>
                  </div>

                  {/* Category Stats */}
                  <div className="p-6 bg-white">
                    <div className="flex items-center justify-between mb-4">
                      <span className="text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ</span>
                      <span className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                        {category.books.length}
                      </span>
                    </div>

                    {/* Recent Books in Category */}
                    <div className="space-y-3">
                      <h4 className="text-sm font-medium text-gray-700">‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</h4>
                      {category.books.slice(0, 3).map((book) => (
                        <div key={book.id} className="flex items-center space-x-3 text-sm">
                          <div className="w-8 h-10 bg-gray-100 rounded flex items-center justify-center">
                            <span className="text-xs">üìñ</span>
                          </div>
                          <div className="flex-1 min-w-0">
                            <p className="font-medium text-gray-900 truncate">{book.title}</p>
                            <p className="text-gray-500 text-xs">{book.author}</p>
                          </div>
                        </div>
                      ))}
                      {category.books.length > 3 && (
                        <p className="text-xs text-gray-500 text-center pt-2">
                          ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {category.books.length - 3} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£...
                        </p>
                      )}
                    </div>

                    {/* View All Button */}
                    <div className="mt-4 pt-4 border-t border-gray-100">
                      <button className="w-full bg-gray-50 text-gray-700 py-2 px-4 rounded-lg text-sm font-medium hover:bg-gray-100 transition-colors group-hover:bg-blue-50 group-hover:text-blue-600">
                        ‡∏î‡∏π‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‚Üí
                      </button>
                    </div>
                  </div>
                </div>
              </Link>
            </div>
          ))}
        </div>

        {/* Empty Categories Section */}
        {displayCategories.length === 0 && (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üìö</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            </h3>
            <p className="text-gray-600 mb-4">
              ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö
            </p>
            <Link
              href="/books"
              className="bg-blue-600 text-white px-6 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors"
            >
              ‡∏î‡∏π‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            </Link>
          </div>
        )}

        {/* Statistics */}
        {displayCategories.length > 0 && (
          <div className="bg-white rounded-lg shadow-sm p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-600">{displayCategories.length}</div>
                <div className="text-sm text-gray-600">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">{books.length}</div>
                <div className="text-sm text-gray-600">‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-purple-600">
                  {Math.max(...displayCategories.map(cat => cat.books.length))}
                </div>
                <div className="text-sm text-gray-600">‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-orange-600">
                  {displayCategories.sort((a, b) => b.books.length - a.books.length)[0]?.name || '-'}
                </div>
                <div className="text-sm text-gray-600">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</div>
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}

export default CategoriesPageContent;